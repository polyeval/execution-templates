targets:
  cpp:
    cwd: C++
    main: src/example.cpp
    run: g++ -std=c++23 src/example.cpp -o example && ./example
  csharp:
    cwd: C#
    main: src/Example.cs
    symlink: 
      - example.csproj 
    run: dotnet run --disable-build-servers
  go:
    cwd: Go
    main: src/example.go
    run: go run src/example.go
  java:
    cwd: Java
    main: src/Example.java
    run: javac src/Example.java -d ./ && java Example
  javascript:
    cwd: JavaScript
    main: src/example.js
    run: node src/example.js
  php:
    cwd: PHP
    main: src/example.php
    run: php src/example.php
  python:
    cwd: Python
    main: src/example.py
    run: python3.12 src/example.py
  ruby:
    cwd: Ruby
    main: src/example.rb
    run: ruby src/example.rb

  coffeescript:
    cwd: CoffeeScript
    main: src/example.coffee
    run: coffee src/example.coffee
  dart:
    cwd: Dart
    main: src/example.dart
    run: dart src/example.dart
  elixir:
    cwd: Elixir
    main: src/example.ex
    run: ELIXIR_ERL_OPTIONS="+fnu" elixir src/example.ex
  groovy:
    cwd: Groovy
    main: src/example.groovy
    run: groovy src/example.groovy
  kotlin:
    cwd: Kotlin
    main: src/Example.kt
    run: kotlinc src/Example.kt && kotlin ExampleKt
  objectivec:
    cwd: Objective-C
    main: src/example.m
    run: clang -fobjc-nonfragile-abi -fobjc-arc -fobjc-runtime=gnustep-2.0 -fblocks src/example.m -lgnustep-base -lobjc -o example && ./example
  perl:
    cwd: Perl
    main: src/example.pl
    run: perl src/example.pl
  rust:
    cwd: Rust
    main: src/example.rs
    run: rustc src/example.rs && ./example
  scala:
    cwd: Scala
    main: src/Example.scala
    run: scalac src/Example.scala && scala Example
  swift:
    cwd: Swift
    main: src/example.swift
    run: swiftc src/example.swift && ./example
  typescript:
    cwd: TypeScript
    main: src/example.ts
    symlink:
      - node_modules
      - tsconfig.json
    prepare: pnpm install
    run: tsc && node dist/example.js
  
  clojure:
    cwd: Clojure
    main: src/example.clj
    run: clojure -M src/example.clj
  crystal:
    cwd: Crystal
    main: src/example.cr
    run: crystal run src/example.cr
  d:
    cwd: D
    main: src/example.d
    run: dmd src/example.d && ./example
  elm:
    cwd: Elm
    main: src/Example.elm
    symlink: 
      - node_modules
      - elm.json
    prepare: pnpm install
    run: ./node_modules/.bin/elm-cli run src/Example.elm
  erlang:
    cwd: Erlang
    main: src/example.erl
    run: erlc src/example.erl && erl -noshell -s example main -s init stop
  fsharp:
    cwd: F#
    main: src/Example.fs
    symlink: 
      - example.fsproj
    run: dotnet run --disable-build-servers
  hack:
    cwd: Hack
    main: src/example.hack
    run: hhvm src/example.hack
  haskell:
    cwd: Haskell
    main: src/example.hs
    run: ghc src/example.hs -outputdir out -o example -fprint-potential-instances && ./example
  julia:
    cwd: Julia
    main: src/example.jl
    run: julia src/example.jl
  lua:
    cwd: Lua
    main: src/example.lua
    run: lua src/example.lua
  nim:
    cwd: Nim
    main: src/example.nim
    run: nim c -o:example src/example.nim && ./example
  ocaml:
    cwd: OCaml
    main: src/example.ml
    run: utop src/example.ml
  purescript:
    cwd: PureScript
    main: src/example.purs
    symlink:
      - .spago
      - node_modules
      - output
      - spago.yaml
      - spago.lock
    prepare: pnpm install && ./node_modules/.bin/spago install
    run: ./node_modules/.bin/spago run -m Example
  racket:
    cwd: Racket
    main: src/example.rkt
    run: racket src/example.rkt
  rescript:
    cwd: ReScript
    main: src/example.res
    symlink:
      - node_modules
      - rescript.json
    prepare: pnpm install
    run: ./node_modules/.bin/rescript && node src/example.res.mjs
  
  commonlisp:
    cwd: CommonLisp
    main: src/example.lisp
    run: sbcl --script src/example.lisp
  emacslisp:
    cwd: EmacsLisp
    main: src/example.el
    run: emacs --script src/example.el
  guilescheme:
    cwd: GuileScheme
    main: src/example.scm
    run: guile src/example.scm
  haxe:
    cwd: Haxe
    main: src/Example.hx
    run: haxe -p ./src -m Example.hx --neko example.n && neko example.n
  raku:
    cwd: Raku
    main: src/example.raku
    run: raku src/example.raku
  reasonml:
    cwd: ReasonML
    main: src/example.re
    run: refmt src/example.re -p ml > example.ml && ocaml example.ml
  standardml:
    cwd: StandardML
    main: src/example.sml
    symlink:
      - example.mlb
    run: mlton -output example example.mlb && ./example
  visualbasic:
    cwd: VisualBasic
    main: src/Example.vb
    symlink:
      - example.vbproj
    run: dotnet run --disable-build-servers